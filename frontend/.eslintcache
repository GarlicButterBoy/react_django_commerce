[{"D:\\Code\\react_django_commerce\\frontend\\src\\index.js":"1","D:\\Code\\react_django_commerce\\frontend\\src\\App.js":"2","D:\\Code\\react_django_commerce\\frontend\\src\\reportWebVitals.js":"3","D:\\Code\\react_django_commerce\\frontend\\src\\components\\Header.js":"4","D:\\Code\\react_django_commerce\\frontend\\src\\components\\Footer.js":"5","D:\\Code\\react_django_commerce\\frontend\\src\\screens\\HomeScreen.js":"6","D:\\Code\\react_django_commerce\\frontend\\src\\products.js":"7","D:\\Code\\react_django_commerce\\frontend\\src\\components\\Product.js":"8","D:\\Code\\react_django_commerce\\frontend\\src\\components\\Rating.js":"9","D:\\Code\\react_django_commerce\\frontend\\src\\screens\\ProductScreen.js":"10","D:\\Code\\react_django_commerce\\frontend\\src\\store.js":"11","D:\\Code\\react_django_commerce\\frontend\\src\\reducers\\productReducers.js":"12","D:\\Code\\react_django_commerce\\frontend\\src\\constants\\productConstants.js":"13","D:\\Code\\react_django_commerce\\frontend\\src\\actions\\productActions.js":"14","D:\\Code\\react_django_commerce\\frontend\\src\\components\\Loader.js":"15","D:\\Code\\react_django_commerce\\frontend\\src\\components\\Message.js":"16","D:\\Code\\react_django_commerce\\frontend\\src\\screens\\CartScreen.js":"17","D:\\Code\\react_django_commerce\\frontend\\src\\reducers\\cartReducers.js":"18","D:\\Code\\react_django_commerce\\frontend\\src\\constants\\cartConstants.js":"19","D:\\Code\\react_django_commerce\\frontend\\src\\actions\\cartActions.js":"20","D:\\Code\\react_django_commerce\\frontend\\src\\reducers\\userReducers.js":"21","D:\\Code\\react_django_commerce\\frontend\\src\\constants\\userConstants.js":"22","D:\\Code\\react_django_commerce\\frontend\\src\\screens\\LoginScreen.js":"23","D:\\Code\\react_django_commerce\\frontend\\src\\actions\\userActions.js":"24","D:\\Code\\react_django_commerce\\frontend\\src\\components\\FormContainer.js":"25","D:\\Code\\react_django_commerce\\frontend\\src\\screens\\RegisterScreen.js":"26","D:\\Code\\react_django_commerce\\frontend\\src\\screens\\ProfileScreen.js":"27","D:\\Code\\react_django_commerce\\frontend\\src\\screens\\ShippingScreen.js":"28","D:\\Code\\react_django_commerce\\frontend\\src\\components\\CheckoutSteps.js":"29","D:\\Code\\react_django_commerce\\frontend\\src\\screens\\PaymenttScreen.js":"30","D:\\Code\\react_django_commerce\\frontend\\src\\screens\\PlaceOrderScreen.js":"31","D:\\Code\\react_django_commerce\\frontend\\src\\reducers\\orderReducer.js":"32","D:\\Code\\react_django_commerce\\frontend\\src\\constants\\orderConstants.js":"33","D:\\Code\\react_django_commerce\\frontend\\src\\actions\\orderActions.js":"34","D:\\Code\\react_django_commerce\\frontend\\src\\screens\\OrderScreen.js":"35"},{"size":599,"mtime":1706629643942,"results":"36","hashOfConfig":"37"},{"size":1547,"mtime":1709134113778,"results":"38","hashOfConfig":"37"},{"size":362,"mtime":1704987360942,"results":"39","hashOfConfig":"37"},{"size":1779,"mtime":1708087203141,"results":"40","hashOfConfig":"37"},{"size":329,"mtime":1705501399493,"results":"41","hashOfConfig":"37"},{"size":1066,"mtime":1706798290413,"results":"42","hashOfConfig":"37"},{"size":2488,"mtime":1705935743291,"results":"43","hashOfConfig":"37"},{"size":973,"mtime":1705676884473,"results":"44","hashOfConfig":"37"},{"size":1582,"mtime":1705590543611,"results":"45","hashOfConfig":"37"},{"size":3975,"mtime":1706883807744,"results":"46","hashOfConfig":"37"},{"size":1788,"mtime":1709561366204,"results":"47","hashOfConfig":"37"},{"size":1052,"mtime":1706798881272,"results":"48","hashOfConfig":"37"},{"size":374,"mtime":1706798626292,"results":"49","hashOfConfig":"37"},{"size":1246,"mtime":1708003598942,"results":"50","hashOfConfig":"37"},{"size":406,"mtime":1706797589955,"results":"51","hashOfConfig":"37"},{"size":198,"mtime":1706798373877,"results":"52","hashOfConfig":"37"},{"size":3668,"mtime":1707228828803,"results":"53","hashOfConfig":"37"},{"size":1257,"mtime":1708958640700,"results":"54","hashOfConfig":"37"},{"size":295,"mtime":1708958490590,"results":"55","hashOfConfig":"37"},{"size":1252,"mtime":1708525880115,"results":"56","hashOfConfig":"37"},{"size":2204,"mtime":1708440704139,"results":"57","hashOfConfig":"37"},{"size":923,"mtime":1708440622965,"results":"58","hashOfConfig":"37"},{"size":2231,"mtime":1708006381460,"results":"59","hashOfConfig":"37"},{"size":4043,"mtime":1709561628465,"results":"60","hashOfConfig":"37"},{"size":364,"mtime":1708005528873,"results":"61","hashOfConfig":"37"},{"size":3328,"mtime":1708088418078,"results":"62","hashOfConfig":"37"},{"size":5473,"mtime":1709562623327,"results":"63","hashOfConfig":"37"},{"size":2667,"mtime":1708525032801,"results":"64","hashOfConfig":"37"},{"size":1312,"mtime":1708524906011,"results":"65","hashOfConfig":"37"},{"size":1541,"mtime":1708525951339,"results":"66","hashOfConfig":"37"},{"size":5453,"mtime":1708958481428,"results":"67","hashOfConfig":"37"},{"size":2448,"mtime":1709561339695,"results":"68","hashOfConfig":"37"},{"size":869,"mtime":1709561185615,"results":"69","hashOfConfig":"37"},{"size":3642,"mtime":1709561522911,"results":"70","hashOfConfig":"37"},{"size":6591,"mtime":1709305965810,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"cp2uju",{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"74"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"74"},"D:\\Code\\react_django_commerce\\frontend\\src\\index.js",[],["150","151"],"D:\\Code\\react_django_commerce\\frontend\\src\\App.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\reportWebVitals.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\components\\Header.js",["152","153"],"import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Navbar, Nav, Container, Row, Col, NavDropdown } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { logout } from \"../actions/userActions\";\r\n\r\nfunction Header() {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  const dispatch = useDispatch();\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n      <Container>\r\n        <LinkContainer to=\"/\">\r\n          <Navbar.Brand variant=\"dark\">ProShop</Navbar.Brand>\r\n        </LinkContainer>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nac\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <LinkContainer to=\"/cart\">\r\n              <Nav.Link>\r\n                <i className=\"fas fa-shopping-cart\"></i>Cart\r\n              </Nav.Link>\r\n            </LinkContainer>\r\n\r\n            {userInfo ? (\r\n              <NavDropdown title={userInfo.name} id=\"username\">\r\n                <LinkContainer to=\"/profile\">\r\n                  <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                </LinkContainer>\r\n                <NavDropdown.Item onClick={logoutHandler}>\r\n                  Logout\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n            ) : (\r\n              <LinkContainer to=\"/login\">\r\n                <Nav.Link>\r\n                  <i className=\"fas fa-user\"></i>Login\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n            )}\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","D:\\Code\\react_django_commerce\\frontend\\src\\components\\Footer.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\screens\\HomeScreen.js",["154"],"import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport Product from \"../components/Product\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listProducts } from \"../actions/productActions\";\r\n\r\nfunction HomeScreen() {\r\n  const dispatch = useDispatch();\r\n  const productList = useSelector((state) => state.productList);\r\n  const { error, loading, products } = productList;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Latest Products</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Row>\r\n          {products.map((product) => (\r\n            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n              <Product product={product} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeScreen;\r\n","D:\\Code\\react_django_commerce\\frontend\\src\\products.js",[],["155","156"],"D:\\Code\\react_django_commerce\\frontend\\src\\components\\Product.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\components\\Rating.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\screens\\ProductScreen.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\store.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\reducers\\productReducers.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\constants\\productConstants.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\actions\\productActions.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\components\\Loader.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\components\\Message.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\screens\\CartScreen.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\reducers\\cartReducers.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\constants\\cartConstants.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\actions\\cartActions.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\reducers\\userReducers.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\constants\\userConstants.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\screens\\LoginScreen.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\actions\\userActions.js",["157"],"D:\\Code\\react_django_commerce\\frontend\\src\\components\\FormContainer.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\screens\\RegisterScreen.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\screens\\ProfileScreen.js",["158"],"D:\\Code\\react_django_commerce\\frontend\\src\\screens\\ShippingScreen.js",["159"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { saveShippingAddress } from \"../actions/cartActions\";\r\n\r\nfunction ShippingScreen({ history }) {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address);\r\n  const [city, setCity] = useState(shippingAddress.city);\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n  const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\r\n    history.push(\"/payment\");\r\n  };\r\n  return (\r\n    <FormContainer>\r\n      <h1>Shipping</h1>\r\n      <CheckoutSteps step1 step2 />\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"address\">\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"Enter Address\"\r\n            value={address ? address : \"\"}\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"city\">\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"Enter City\"\r\n            value={city ? city : \"\"}\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"postalCode\">\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"Enter Postal Code\"\r\n            value={postalCode ? postalCode : \"\"}\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"country\">\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"Enter Country\"\r\n            value={country ? country : \"\"}\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n}\r\n\r\nexport default ShippingScreen;\r\n","D:\\Code\\react_django_commerce\\frontend\\src\\components\\CheckoutSteps.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\screens\\PaymenttScreen.js",["160"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { savePaymentMethod } from \"../actions/cartActions\";\r\n\r\nfunction PaymenttScreen({ history }) {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  const dispatch = useDispatch();\r\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\r\n\r\n  if (!shippingAddress.address) {\r\n    history.push(\"/shipping\");\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(savePaymentMethod(paymentMethod));\r\n    history.push(\"/placeorder\");\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n          <Form.Label as=\"legend\">Select Method</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type=\"radio\"\r\n              label=\"PayPal or Credit Card\"\r\n              id=\"PayPal\"\r\n              name=\"paymentMethod\"\r\n              checked\r\n              onChange={(e) => {\r\n                setPaymentMethod(e.target.value);\r\n              }}\r\n            ></Form.Check>\r\n          </Col>\r\n        </Form.Group>\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n}\r\n\r\nexport default PaymenttScreen;\r\n","D:\\Code\\react_django_commerce\\frontend\\src\\screens\\PlaceOrderScreen.js",["161","162","163","164","165"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Card,\r\n  ListGroupItem,\r\n} from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { createOrder } from \"../actions/orderActions\";\r\nimport { ORDER_CREATE_RESET } from \"../constants/orderConstants\";\r\nimport { CART_CLEAR_ITEMS } from \"../constants/cartConstants\";\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { order, error, success } = orderCreate;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  cart.itemsPrice = cart.cartItems\r\n    .reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    .toFixed(2);\r\n  cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2);\r\n  cart.taxPrice = (0.13 * cart.itemsPrice).toFixed(2);\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2);\r\n\r\n  if (!cart.paymentMethod) {\r\n    history.push(\"/payment\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`);\r\n      dispatch({ type: ORDER_CREATE_RESET });\r\n    }\r\n  }, [success, history]);\r\n\r\n  const placeOrder = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <div>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Shipping: </strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}\r\n                {\"   \"}\r\n                {cart.shippingAddress.postalCode},{cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {cart.paymentMethod}\r\n              </p>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message variant=\"info\">Your Cart is empty.</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} X ${item.price} = $\r\n                          {(item.qty * item.price).toFixed(2)}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items:</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping:</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax:</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total:</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  className=\"btn-block\"\r\n                  type=\"button\"\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrder}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlaceOrderScreen;\r\n","D:\\Code\\react_django_commerce\\frontend\\src\\reducers\\orderReducer.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\constants\\orderConstants.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\actions\\orderActions.js",["166","167"],"D:\\Code\\react_django_commerce\\frontend\\src\\screens\\OrderScreen.js",["168","169"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Card,\r\n  ListGroupItem,\r\n} from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { getOrderDetails, payOrder } from \"../actions/orderActions\";\r\nimport { ORDER_PAY_RESET } from \"../constants/orderConstants\";\r\n\r\nfunction OrderScreen({ match }) {\r\n  const orderId = match.params.id;\r\n  const dispatch = useDispatch();\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, error, loading } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  if (!loading && !error) {\r\n    order.itemsPrice = order.orderItems\r\n      .reduce((acc, item) => acc + item.price * item.qty, 0)\r\n      .toFixed(2);\r\n  }\r\n  //Client ID ASj-pmyYPJ9fQabbs4nO4xv-BiSRq5ri9UdZxzsgWHeumm7ZlARaGbCQ0nxIXutNNdW24EJCZkWbnX1N\r\n  const addPayPalScript = () => {\r\n    const script = document.createElement(\"script\");\r\n    script.type = \"text/javascript\";\r\n    script.src =\r\n      \"https://www.paypal.com/sdk/js?client-id=ASj-pmyYPJ9fQabbs4nO4xv-BiSRq5ri9UdZxzsgWHeumm7ZlARaGbCQ0nxIXutNNdW24EJCZkWbnX1N\";\r\n    script.async = true;\r\n    script.onload = () => {\r\n      setSdkReady(true);\r\n    };\r\n    document.body.appendChild(script);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!order || successPay || order._id !== Number(orderId)) {\r\n      dispatch({ type: ORDER_PAY_RESET });\r\n      dispatch(getOrderDetails(orderId));\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [dispatch, order, orderId, successPay]);\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    dispatch(payOrder(orderId, paymentResult));\r\n  };\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <div>\r\n      <h1>Order: {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: {order.user.name}</strong>\r\n              </p>\r\n              <p>\r\n                <strong>\r\n                  Email:{\" \"}\r\n                  <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n                </strong>\r\n              </p>\r\n              <p>\r\n                <strong>Shipping: </strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}\r\n                {\"   \"}\r\n                {order.shippingAddress.postalCode},{\"   \"}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant=\"success\">\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant=\"warning\">Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant=\"success\">Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant=\"warning\">Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message variant=\"info\">Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                          {item.qty} X ${item.price} = $\r\n                          {(item.qty * item.price).toFixed(2)}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items:</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping:</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax:</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total:</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderScreen;\r\n",{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":3,"column":34,"nodeType":"176","messageId":"177","endLine":3,"endColumn":37},{"ruleId":"174","severity":1,"message":"178","line":3,"column":39,"nodeType":"176","messageId":"177","endLine":3,"endColumn":42},{"ruleId":"174","severity":1,"message":"179","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":25},{"ruleId":"170","replacedBy":"180"},{"ruleId":"172","replacedBy":"181"},{"ruleId":"174","severity":1,"message":"182","line":16,"column":3,"nodeType":"176","messageId":"177","endLine":16,"endColumn":28},{"ruleId":"174","severity":1,"message":"183","line":2,"column":10,"nodeType":"176","messageId":"177","endLine":2,"endColumn":14},{"ruleId":"174","severity":1,"message":"184","line":1,"column":27,"nodeType":"176","messageId":"177","endLine":1,"endColumn":36},{"ruleId":"174","severity":1,"message":"184","line":1,"column":27,"nodeType":"176","messageId":"177","endLine":1,"endColumn":36},{"ruleId":"174","severity":1,"message":"179","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":25},{"ruleId":"174","severity":1,"message":"185","line":9,"column":3,"nodeType":"176","messageId":"177","endLine":9,"endColumn":16},{"ruleId":"174","severity":1,"message":"186","line":14,"column":8,"nodeType":"176","messageId":"177","endLine":14,"endColumn":21},{"ruleId":"174","severity":1,"message":"187","line":18,"column":10,"nodeType":"176","messageId":"177","endLine":18,"endColumn":26},{"ruleId":"188","severity":1,"message":"189","line":48,"column":6,"nodeType":"190","endLine":48,"endColumn":24,"suggestions":"191"},{"ruleId":"174","severity":1,"message":"192","line":12,"column":3,"nodeType":"176","messageId":"177","endLine":12,"endColumn":18},{"ruleId":"174","severity":1,"message":"193","line":16,"column":3,"nodeType":"176","messageId":"177","endLine":16,"endColumn":22},{"ruleId":"174","severity":1,"message":"194","line":3,"column":3,"nodeType":"176","messageId":"177","endLine":3,"endColumn":9},{"ruleId":"174","severity":1,"message":"185","line":9,"column":3,"nodeType":"176","messageId":"177","endLine":9,"endColumn":16},"no-native-reassign",["195"],"no-negated-in-lhs",["196"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","'useState' is defined but never used.",["195"],["196"],"'USER_UPDATE_PROFILE_RESET' is defined but never used.","'Link' is defined but never used.","'useEffect' is defined but never used.","'ListGroupItem' is defined but never used.","'FormContainer' is defined but never used.","'CART_CLEAR_ITEMS' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'order._id'. Either include them or remove the dependency array.","ArrayExpression",["197"],"'ORDER_PAY_RESET' is defined but never used.","'ORDER_LIST_MY_RESET' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"198","fix":"199"},"Update the dependencies array to be: [success, history, order._id, dispatch]",{"range":"200","text":"201"},[1454,1472],"[success, history, order._id, dispatch]"]