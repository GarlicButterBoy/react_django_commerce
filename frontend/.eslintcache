[{"D:\\Code\\react_django_commerce\\frontend\\src\\index.js":"1","D:\\Code\\react_django_commerce\\frontend\\src\\App.js":"2","D:\\Code\\react_django_commerce\\frontend\\src\\reportWebVitals.js":"3","D:\\Code\\react_django_commerce\\frontend\\src\\components\\Header.js":"4","D:\\Code\\react_django_commerce\\frontend\\src\\components\\Footer.js":"5","D:\\Code\\react_django_commerce\\frontend\\src\\screens\\HomeScreen.js":"6","D:\\Code\\react_django_commerce\\frontend\\src\\products.js":"7","D:\\Code\\react_django_commerce\\frontend\\src\\components\\Product.js":"8","D:\\Code\\react_django_commerce\\frontend\\src\\components\\Rating.js":"9","D:\\Code\\react_django_commerce\\frontend\\src\\screens\\ProductScreen.js":"10","D:\\Code\\react_django_commerce\\frontend\\src\\store.js":"11","D:\\Code\\react_django_commerce\\frontend\\src\\reducers\\productReducers.js":"12","D:\\Code\\react_django_commerce\\frontend\\src\\constants\\productConstants.js":"13","D:\\Code\\react_django_commerce\\frontend\\src\\actions\\productActions.js":"14","D:\\Code\\react_django_commerce\\frontend\\src\\components\\Loader.js":"15","D:\\Code\\react_django_commerce\\frontend\\src\\components\\Message.js":"16","D:\\Code\\react_django_commerce\\frontend\\src\\screens\\CartScreen.js":"17","D:\\Code\\react_django_commerce\\frontend\\src\\reducers\\cartReducers.js":"18","D:\\Code\\react_django_commerce\\frontend\\src\\constants\\cartConstants.js":"19","D:\\Code\\react_django_commerce\\frontend\\src\\actions\\cartActions.js":"20","D:\\Code\\react_django_commerce\\frontend\\src\\reducers\\userReducers.js":"21","D:\\Code\\react_django_commerce\\frontend\\src\\constants\\userConstants.js":"22","D:\\Code\\react_django_commerce\\frontend\\src\\screens\\LoginScreen.js":"23","D:\\Code\\react_django_commerce\\frontend\\src\\actions\\userActions.js":"24","D:\\Code\\react_django_commerce\\frontend\\src\\components\\FormContainer.js":"25","D:\\Code\\react_django_commerce\\frontend\\src\\screens\\RegisterScreen.js":"26","D:\\Code\\react_django_commerce\\frontend\\src\\screens\\ProfileScreen.js":"27","D:\\Code\\react_django_commerce\\frontend\\src\\screens\\ShippingScreen.js":"28","D:\\Code\\react_django_commerce\\frontend\\src\\components\\CheckoutSteps.js":"29","D:\\Code\\react_django_commerce\\frontend\\src\\screens\\PaymenttScreen.js":"30","D:\\Code\\react_django_commerce\\frontend\\src\\screens\\PlaceOrderScreen.js":"31","D:\\Code\\react_django_commerce\\frontend\\src\\reducers\\orderReducer.js":"32","D:\\Code\\react_django_commerce\\frontend\\src\\constants\\orderConstants.js":"33","D:\\Code\\react_django_commerce\\frontend\\src\\actions\\orderActions.js":"34","D:\\Code\\react_django_commerce\\frontend\\src\\screens\\OrderScreen.js":"35","D:\\Code\\react_django_commerce\\frontend\\src\\screens\\userListScreen.js":"36","D:\\Code\\react_django_commerce\\frontend\\src\\screens\\UserListScreen.js":"37","D:\\Code\\react_django_commerce\\frontend\\src\\screens\\UserEditScreen.js":"38","D:\\Code\\react_django_commerce\\frontend\\src\\screens\\ProductListScreen.js":"39"},{"size":599,"mtime":1706629643942,"results":"40","hashOfConfig":"41"},{"size":1939,"mtime":1710163484528,"results":"42","hashOfConfig":"41"},{"size":362,"mtime":1704987360942,"results":"43","hashOfConfig":"41"},{"size":2391,"mtime":1709733734846,"results":"44","hashOfConfig":"41"},{"size":329,"mtime":1705501399493,"results":"45","hashOfConfig":"41"},{"size":1066,"mtime":1706798290413,"results":"46","hashOfConfig":"41"},{"size":2488,"mtime":1705935743291,"results":"47","hashOfConfig":"41"},{"size":973,"mtime":1705676884473,"results":"48","hashOfConfig":"41"},{"size":1582,"mtime":1705590543611,"results":"49","hashOfConfig":"41"},{"size":3975,"mtime":1706883807744,"results":"50","hashOfConfig":"41"},{"size":2015,"mtime":1710164013546,"results":"51","hashOfConfig":"41"},{"size":1509,"mtime":1710163984878,"results":"52","hashOfConfig":"41"},{"size":565,"mtime":1710163901913,"results":"53","hashOfConfig":"41"},{"size":2065,"mtime":1710164305571,"results":"54","hashOfConfig":"41"},{"size":406,"mtime":1706797589955,"results":"55","hashOfConfig":"41"},{"size":198,"mtime":1706798373877,"results":"56","hashOfConfig":"41"},{"size":3668,"mtime":1707228828803,"results":"57","hashOfConfig":"41"},{"size":1257,"mtime":1708958640700,"results":"58","hashOfConfig":"41"},{"size":295,"mtime":1708958490590,"results":"59","hashOfConfig":"41"},{"size":1252,"mtime":1708525880115,"results":"60","hashOfConfig":"41"},{"size":3690,"mtime":1709906078003,"results":"61","hashOfConfig":"41"},{"size":1536,"mtime":1709906005086,"results":"62","hashOfConfig":"41"},{"size":2231,"mtime":1708006381460,"results":"63","hashOfConfig":"41"},{"size":6625,"mtime":1709906396579,"results":"64","hashOfConfig":"41"},{"size":364,"mtime":1708005528873,"results":"65","hashOfConfig":"41"},{"size":3328,"mtime":1709648638902,"results":"66","hashOfConfig":"41"},{"size":5502,"mtime":1709905466797,"results":"67","hashOfConfig":"41"},{"size":2667,"mtime":1708525032801,"results":"68","hashOfConfig":"41"},{"size":1312,"mtime":1708524906011,"results":"69","hashOfConfig":"41"},{"size":1541,"mtime":1708525951339,"results":"70","hashOfConfig":"41"},{"size":5453,"mtime":1708958481428,"results":"71","hashOfConfig":"41"},{"size":2448,"mtime":1709561339695,"results":"72","hashOfConfig":"41"},{"size":869,"mtime":1709561185615,"results":"73","hashOfConfig":"41"},{"size":3642,"mtime":1709561522911,"results":"74","hashOfConfig":"41"},{"size":6591,"mtime":1709305965810,"results":"75","hashOfConfig":"41"},{"size":864,"mtime":1709648334819,"results":"76","hashOfConfig":"41"},{"size":2792,"mtime":1710163077936,"results":"77","hashOfConfig":"41"},{"size":3204,"mtime":1709906904350,"results":"78","hashOfConfig":"41"},{"size":3297,"mtime":1710248989586,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"cp2uju",{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"82"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"82"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"82"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"82"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"82"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"82"},{"filePath":"162","messages":"163","errorCount":3,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"82"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"82"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Code\\react_django_commerce\\frontend\\src\\index.js",[],["172","173"],"D:\\Code\\react_django_commerce\\frontend\\src\\App.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\reportWebVitals.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\components\\Header.js",["174","175"],"import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Navbar, Nav, Container, Row, Col, NavDropdown } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { logout } from \"../actions/userActions\";\r\n\r\nfunction Header() {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  const dispatch = useDispatch();\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n      <Container>\r\n        <LinkContainer to=\"/\">\r\n          <Navbar.Brand variant=\"dark\">ProShop</Navbar.Brand>\r\n        </LinkContainer>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nac\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <LinkContainer to=\"/cart\">\r\n              <Nav.Link>\r\n                <i className=\"fas fa-shopping-cart\"></i>Cart\r\n              </Nav.Link>\r\n            </LinkContainer>\r\n\r\n            {userInfo ? (\r\n              <NavDropdown title={userInfo.name} id=\"username\">\r\n                <LinkContainer to=\"/profile\">\r\n                  <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                </LinkContainer>\r\n                <NavDropdown.Item onClick={logoutHandler}>\r\n                  Logout\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n            ) : (\r\n              <LinkContainer to=\"/login\">\r\n                <Nav.Link>\r\n                  <i className=\"fas fa-user\"></i>Login\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n            )}\r\n\r\n            {userInfo && userInfo.isAdmin && (\r\n              <NavDropdown title=\"Admin\" id=\"adminmenu\">\r\n                <LinkContainer to=\"/admin/userlist\">\r\n                  <NavDropdown.Item>Users</NavDropdown.Item>\r\n                </LinkContainer>\r\n                <LinkContainer to=\"/admin/productlist\">\r\n                  <NavDropdown.Item>Products</NavDropdown.Item>\r\n                </LinkContainer>\r\n                <LinkContainer to=\"/admin/orderlist\">\r\n                  <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                </LinkContainer>\r\n              </NavDropdown>\r\n            )}\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","D:\\Code\\react_django_commerce\\frontend\\src\\components\\Footer.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\screens\\HomeScreen.js",["176"],"import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport Product from \"../components/Product\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listProducts } from \"../actions/productActions\";\r\n\r\nfunction HomeScreen() {\r\n  const dispatch = useDispatch();\r\n  const productList = useSelector((state) => state.productList);\r\n  const { error, loading, products } = productList;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Latest Products</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Row>\r\n          {products.map((product) => (\r\n            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n              <Product product={product} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeScreen;\r\n","D:\\Code\\react_django_commerce\\frontend\\src\\products.js",[],["177","178"],"D:\\Code\\react_django_commerce\\frontend\\src\\components\\Product.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\components\\Rating.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\screens\\ProductScreen.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\store.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\reducers\\productReducers.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\constants\\productConstants.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\actions\\productActions.js",["179"],"import axios from \"axios\";\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n} from \"../constants/productConstants\";\r\n\r\nexport const listProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_LIST_REQUEST,\r\n    });\r\n\r\n    const { data } = await axios.get(\"/api/products/\");\r\n\r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_REQUEST,\r\n    });\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.delete(`/api/products/delete/${id}`, config);\r\n\r\n    dispatch({\r\n      type: PRODUCT_DELETE_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","D:\\Code\\react_django_commerce\\frontend\\src\\components\\Loader.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\components\\Message.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\screens\\CartScreen.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\reducers\\cartReducers.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\constants\\cartConstants.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\actions\\cartActions.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\reducers\\userReducers.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\constants\\userConstants.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\screens\\LoginScreen.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\actions\\userActions.js",["180"],"import {\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGOUT,\r\n  USER_LOGIN_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_RESET,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_RESET,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n} from \"../constants/userConstants\";\r\nimport axios from \"axios\";\r\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\";\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users/login/\",\r\n      { username: email, password: password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({ type: USER_LOGOUT });\r\n  dispatch({ type: USER_DETAILS_RESET });\r\n  dispatch({ type: USER_LIST_RESET });\r\n  dispatch({ type: ORDER_LIST_MY_RESET });\r\n};\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users/register/\",\r\n      { name: name, email: email, password: password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users/${id}/`, config);\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/users/profile/update/`,\r\n      user,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users/`, config);\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.delete(`/api/users/delete/${id}/`, config);\r\n\r\n    dispatch({\r\n      type: USER_DELETE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/users/update/${user._id}/`,\r\n      user,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_SUCCESS,\r\n    });\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","D:\\Code\\react_django_commerce\\frontend\\src\\components\\FormContainer.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\screens\\RegisterScreen.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\screens\\ProfileScreen.js",["181"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\r\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\r\nimport { listMyOrders } from \"../actions/orderActions\";\r\n\r\nfunction ProfileScreen({ history }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy);\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      if (!user || !user.name || success || userInfo._id !== user._id) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\r\n        dispatch(getUserDetails(\"profile\"));\r\n        dispatch(listMyOrders());\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user, success]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(\r\n        updateUserProfile({\r\n          id: user._id,\r\n          name: name,\r\n          email: user.email,\r\n          password: password,\r\n        })\r\n      );\r\n      setMessage(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant=\"info\">{message}</Message>}\r\n        {error && <Message variant=\"danger\">{error}</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"name\"\r\n              placeholder=\"Enter Name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"email\"\r\n              placeholder=\"Enter Email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"confirmPassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Confirm Password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type=\"submit\" variant=\"primary\">\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant=\"danger\">{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Date</th>\r\n                <th>Total</th>\r\n                <th>Paid</th>\r\n                <th>Delivered</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>${order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button className=\"btn-sm\">Details</Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                  <td>{order._id}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default ProfileScreen;\r\n","D:\\Code\\react_django_commerce\\frontend\\src\\screens\\ShippingScreen.js",["182"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { saveShippingAddress } from \"../actions/cartActions\";\r\n\r\nfunction ShippingScreen({ history }) {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address);\r\n  const [city, setCity] = useState(shippingAddress.city);\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n  const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\r\n    history.push(\"/payment\");\r\n  };\r\n  return (\r\n    <FormContainer>\r\n      <h1>Shipping</h1>\r\n      <CheckoutSteps step1 step2 />\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId=\"address\">\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"Enter Address\"\r\n            value={address ? address : \"\"}\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"city\">\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"Enter City\"\r\n            value={city ? city : \"\"}\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"postalCode\">\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"Enter Postal Code\"\r\n            value={postalCode ? postalCode : \"\"}\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"country\">\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"Enter Country\"\r\n            value={country ? country : \"\"}\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n}\r\n\r\nexport default ShippingScreen;\r\n","D:\\Code\\react_django_commerce\\frontend\\src\\components\\CheckoutSteps.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\screens\\PaymenttScreen.js",["183"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { savePaymentMethod } from \"../actions/cartActions\";\r\n\r\nfunction PaymenttScreen({ history }) {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  const dispatch = useDispatch();\r\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\r\n\r\n  if (!shippingAddress.address) {\r\n    history.push(\"/shipping\");\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(savePaymentMethod(paymentMethod));\r\n    history.push(\"/placeorder\");\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n          <Form.Label as=\"legend\">Select Method</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type=\"radio\"\r\n              label=\"PayPal or Credit Card\"\r\n              id=\"PayPal\"\r\n              name=\"paymentMethod\"\r\n              checked\r\n              onChange={(e) => {\r\n                setPaymentMethod(e.target.value);\r\n              }}\r\n            ></Form.Check>\r\n          </Col>\r\n        </Form.Group>\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n}\r\n\r\nexport default PaymenttScreen;\r\n","D:\\Code\\react_django_commerce\\frontend\\src\\screens\\PlaceOrderScreen.js",["184","185","186","187","188"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Card,\r\n  ListGroupItem,\r\n} from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/Message\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { createOrder } from \"../actions/orderActions\";\r\nimport { ORDER_CREATE_RESET } from \"../constants/orderConstants\";\r\nimport { CART_CLEAR_ITEMS } from \"../constants/cartConstants\";\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { order, error, success } = orderCreate;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  cart.itemsPrice = cart.cartItems\r\n    .reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    .toFixed(2);\r\n  cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2);\r\n  cart.taxPrice = (0.13 * cart.itemsPrice).toFixed(2);\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2);\r\n\r\n  if (!cart.paymentMethod) {\r\n    history.push(\"/payment\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`);\r\n      dispatch({ type: ORDER_CREATE_RESET });\r\n    }\r\n  }, [success, history]);\r\n\r\n  const placeOrder = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <div>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Shipping: </strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}\r\n                {\"   \"}\r\n                {cart.shippingAddress.postalCode},{cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {cart.paymentMethod}\r\n              </p>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message variant=\"info\">Your Cart is empty.</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} X ${item.price} = $\r\n                          {(item.qty * item.price).toFixed(2)}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items:</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping:</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax:</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total:</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant=\"danger\">{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  className=\"btn-block\"\r\n                  type=\"button\"\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrder}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlaceOrderScreen;\r\n","D:\\Code\\react_django_commerce\\frontend\\src\\reducers\\orderReducer.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\constants\\orderConstants.js",[],"D:\\Code\\react_django_commerce\\frontend\\src\\actions\\orderActions.js",["189","190"],"import axios from \"axios\";\r\nimport {\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_RESET,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_RESET,\r\n} from \"../constants/orderConstants\";\r\nimport { CART_CLEAR_ITEMS } from \"../constants/cartConstants\";\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/orders/add/`, order, config);\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: CART_CLEAR_ITEMS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.removeItem(\"cartItems\");\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}/`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_PAY_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${id}/pay/`,\r\n      paymentResult,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ORDER_PAY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders/`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","D:\\Code\\react_django_commerce\\frontend\\src\\screens\\OrderScreen.js",["191","192"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Card,\r\n  ListGroupItem,\r\n} from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport { getOrderDetails, payOrder } from \"../actions/orderActions\";\r\nimport { ORDER_PAY_RESET } from \"../constants/orderConstants\";\r\n\r\nfunction OrderScreen({ match }) {\r\n  const orderId = match.params.id;\r\n  const dispatch = useDispatch();\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, error, loading } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  if (!loading && !error) {\r\n    order.itemsPrice = order.orderItems\r\n      .reduce((acc, item) => acc + item.price * item.qty, 0)\r\n      .toFixed(2);\r\n  }\r\n  //Client ID ASj-pmyYPJ9fQabbs4nO4xv-BiSRq5ri9UdZxzsgWHeumm7ZlARaGbCQ0nxIXutNNdW24EJCZkWbnX1N\r\n  const addPayPalScript = () => {\r\n    const script = document.createElement(\"script\");\r\n    script.type = \"text/javascript\";\r\n    script.src =\r\n      \"https://www.paypal.com/sdk/js?client-id=ASj-pmyYPJ9fQabbs4nO4xv-BiSRq5ri9UdZxzsgWHeumm7ZlARaGbCQ0nxIXutNNdW24EJCZkWbnX1N\";\r\n    script.async = true;\r\n    script.onload = () => {\r\n      setSdkReady(true);\r\n    };\r\n    document.body.appendChild(script);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!order || successPay || order._id !== Number(orderId)) {\r\n      dispatch({ type: ORDER_PAY_RESET });\r\n      dispatch(getOrderDetails(orderId));\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [dispatch, order, orderId, successPay]);\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    dispatch(payOrder(orderId, paymentResult));\r\n  };\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <div>\r\n      <h1>Order: {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: {order.user.name}</strong>\r\n              </p>\r\n              <p>\r\n                <strong>\r\n                  Email:{\" \"}\r\n                  <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n                </strong>\r\n              </p>\r\n              <p>\r\n                <strong>Shipping: </strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}\r\n                {\"   \"}\r\n                {order.shippingAddress.postalCode},{\"   \"}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant=\"success\">\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant=\"warning\">Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant=\"success\">Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant=\"warning\">Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message variant=\"info\">Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                          {item.qty} X ${item.price} = $\r\n                          {(item.qty * item.price).toFixed(2)}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items:</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping:</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax:</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total:</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderScreen;\r\n","D:\\Code\\react_django_commerce\\frontend\\src\\screens\\userListScreen.js",["193","194","195","196","197","198","199","200","201","202","203","204"],"D:\\Code\\react_django_commerce\\frontend\\src\\screens\\UserListScreen.js",["205"],"import React, { useState, useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport { listUsers, deleteUser } from \"../actions/userActions\";\r\n\r\nfunction UserListScreen({ history }) {\r\n  const dispatch = useDispatch();\r\n  const userList = useSelector((state) => state.userList);\r\n  const { loading, error, users } = userList;\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  const userDelete = useSelector((state) => state.userDelete);\r\n  const { success: successDelete } = userDelete;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers());\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [dispatch, history, successDelete, userInfo]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure you want to delete this user?\")) {\r\n      dispatch(deleteUser(id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>{user.email}</td>\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant=\"light\" className=\"btn-sm\">\r\n                      <i className=\"fas fa-edit\"></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    className=\"btn-sm\"\r\n                    onClick={() => deleteHandler(user._id)}\r\n                  >\r\n                    <i className=\"fas fa-trash\"></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserListScreen;\r\n","D:\\Code\\react_django_commerce\\frontend\\src\\screens\\UserEditScreen.js",["206"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\r\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\r\n\r\nfunction UserEditScreen({ match, history }) {\r\n  const userId = match.params.id;\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setAdmin] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET });\r\n      history.push(\"/admin/userlist\");\r\n    } else {\r\n      if (!user.name || user._id !== Number(userId)) {\r\n        dispatch(getUserDetails(userId));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n        setAdmin(user.isAdmin);\r\n      }\r\n    }\r\n  }, [user, userId, successUpdate, history]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateUser({ _id: user._id, name, email, isAdmin }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/admin/userlist\">Go Back</Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                placeholder=\"Enter Name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"isAdmin\">\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                label=\"Is Admin?\"\r\n                checked={isAdmin}\r\n                onChange={(e) => setAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserEditScreen;\r\n","D:\\Code\\react_django_commerce\\frontend\\src\\screens\\ProductListScreen.js",["207"],{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","severity":1,"message":"213","line":3,"column":34,"nodeType":"214","messageId":"215","endLine":3,"endColumn":37},{"ruleId":"212","severity":1,"message":"216","line":3,"column":39,"nodeType":"214","messageId":"215","endLine":3,"endColumn":42},{"ruleId":"212","severity":1,"message":"217","line":1,"column":17,"nodeType":"214","messageId":"215","endLine":1,"endColumn":25},{"ruleId":"208","replacedBy":"218"},{"ruleId":"210","replacedBy":"219"},{"ruleId":"212","severity":1,"message":"220","line":77,"column":13,"nodeType":"214","messageId":"215","endLine":77,"endColumn":17},{"ruleId":"212","severity":1,"message":"221","line":16,"column":3,"nodeType":"214","messageId":"215","endLine":16,"endColumn":28},{"ruleId":"212","severity":1,"message":"222","line":2,"column":10,"nodeType":"214","messageId":"215","endLine":2,"endColumn":14},{"ruleId":"212","severity":1,"message":"223","line":1,"column":27,"nodeType":"214","messageId":"215","endLine":1,"endColumn":36},{"ruleId":"212","severity":1,"message":"223","line":1,"column":27,"nodeType":"214","messageId":"215","endLine":1,"endColumn":36},{"ruleId":"212","severity":1,"message":"217","line":1,"column":17,"nodeType":"214","messageId":"215","endLine":1,"endColumn":25},{"ruleId":"212","severity":1,"message":"224","line":9,"column":3,"nodeType":"214","messageId":"215","endLine":9,"endColumn":16},{"ruleId":"212","severity":1,"message":"225","line":14,"column":8,"nodeType":"214","messageId":"215","endLine":14,"endColumn":21},{"ruleId":"212","severity":1,"message":"226","line":18,"column":10,"nodeType":"214","messageId":"215","endLine":18,"endColumn":26},{"ruleId":"227","severity":1,"message":"228","line":48,"column":6,"nodeType":"229","endLine":48,"endColumn":24,"suggestions":"230"},{"ruleId":"212","severity":1,"message":"231","line":12,"column":3,"nodeType":"214","messageId":"215","endLine":12,"endColumn":18},{"ruleId":"212","severity":1,"message":"232","line":16,"column":3,"nodeType":"214","messageId":"215","endLine":16,"endColumn":22},{"ruleId":"212","severity":1,"message":"233","line":3,"column":3,"nodeType":"214","messageId":"215","endLine":3,"endColumn":9},{"ruleId":"212","severity":1,"message":"224","line":9,"column":3,"nodeType":"214","messageId":"215","endLine":9,"endColumn":16},{"ruleId":"212","severity":1,"message":"217","line":1,"column":17,"nodeType":"214","messageId":"215","endLine":1,"endColumn":25},{"ruleId":"212","severity":1,"message":"234","line":2,"column":10,"nodeType":"214","messageId":"215","endLine":2,"endColumn":23},{"ruleId":"212","severity":1,"message":"235","line":3,"column":10,"nodeType":"214","messageId":"215","endLine":3,"endColumn":15},{"ruleId":"212","severity":1,"message":"233","line":3,"column":17,"nodeType":"214","messageId":"215","endLine":3,"endColumn":23},{"ruleId":"212","severity":1,"message":"236","line":5,"column":8,"nodeType":"214","messageId":"215","endLine":5,"endColumn":14},{"ruleId":"212","severity":1,"message":"237","line":6,"column":8,"nodeType":"214","messageId":"215","endLine":6,"endColumn":15},{"ruleId":"238","severity":2,"message":"239","line":10,"column":20,"nodeType":"214","endLine":10,"endColumn":31},{"ruleId":"238","severity":2,"message":"240","line":11,"column":20,"nodeType":"214","endLine":11,"endColumn":31},{"ruleId":"212","severity":1,"message":"241","line":12,"column":11,"nodeType":"214","messageId":"215","endLine":12,"endColumn":18},{"ruleId":"212","severity":1,"message":"242","line":12,"column":20,"nodeType":"214","messageId":"215","endLine":12,"endColumn":25},{"ruleId":"212","severity":1,"message":"243","line":12,"column":27,"nodeType":"214","messageId":"215","endLine":12,"endColumn":32},{"ruleId":"238","severity":2,"message":"244","line":14,"column":3,"nodeType":"214","endLine":14,"endColumn":12},{"ruleId":"212","severity":1,"message":"217","line":1,"column":17,"nodeType":"214","messageId":"215","endLine":1,"endColumn":25},{"ruleId":"227","severity":1,"message":"245","line":42,"column":6,"nodeType":"229","endLine":42,"endColumn":44,"suggestions":"246"},{"ruleId":"212","severity":1,"message":"217","line":1,"column":17,"nodeType":"214","messageId":"215","endLine":1,"endColumn":25},"no-native-reassign",["247"],"no-negated-in-lhs",["248"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","'useState' is defined but never used.",["247"],["248"],"'data' is assigned a value but never used.","'USER_UPDATE_PROFILE_RESET' is defined but never used.","'Link' is defined but never used.","'useEffect' is defined but never used.","'ListGroupItem' is defined but never used.","'FormContainer' is defined but never used.","'CART_CLEAR_ITEMS' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'order._id'. Either include them or remove the dependency array.","ArrayExpression",["249"],"'ORDER_PAY_RESET' is defined but never used.","'ORDER_LIST_MY_RESET' is defined but never used.","'Button' is defined but never used.","'LinkContainer' is defined but never used.","'Table' is defined but never used.","'Loader' is defined but never used.","'Message' is defined but never used.","react-hooks/rules-of-hooks","React Hook \"useDispatch\" is called in function \"userListScreen\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","React Hook \"useSelector\" is called in function \"userListScreen\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'users' is assigned a value but never used.","React Hook \"useEffect\" is called in function \"userListScreen\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["250"],"no-global-assign","no-unsafe-negation",{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},"Update the dependencies array to be: [success, history, order._id, dispatch]",{"range":"255","text":"256"},"Update the dependencies array to be: [user, userId, successUpdate, history, dispatch]",{"range":"257","text":"258"},[1454,1472],"[success, history, order._id, dispatch]",[1411,1449],"[user, userId, successUpdate, history, dispatch]"]